{
    "Array": "This class provides a way of storing more than one value for a given name. These values can be accessed by another index.",
    "Array_ContainsIndex": "Gets whether or not the array contains the specified index. This is very useful when deciding if the array's index was initialized by some value or not.",
    "Array_ContainsIndex_Array": "The array to check.",
    "Array_ContainsIndex_Index": "The index to check.",
    "Array_ContainsValue": "Gets whether or not the array contains the specified value. This is very useful when deciding if the array's value was stored in some index.",
    "Array_ContainsValue_Array": "The array to check.",
    "Array_ContainsValue_Index": "The index to check.",
    "Array_GetAllIndices": "Gets all the indices for the array, as another array. The index of the returned array starts from 1.",
    "Array_GetAllIndices_Array": "The array whose indices are requested.",
    "Array_GetItemCount": "Gets the count of all the items in the array.",
    "Array_GetItemCount_Array": "The array whose item count is requested.",
    "Array_IsArray": "Checks whether the value passed is an array or not.",
    "Array_IsArray_Value": "The value to check.",
    "Clock": "This class provides access to the system clock.",
    "Clock_Time": "Gets the current system time.",
    "Controls": "The Controls object allows you to add, move and interact with controls.",
    "Controls_LastClickedButton": "Gets the last Button that was clicked on the Graphics Window.",
    "Controls_LastTypedTextBox": "Gets the last TextBox, text was typed into.",
    "Controls_ButtonClicked": "Raises an event when any button control is clicked.",
    "Controls_TextTyped": "Raises an event when text is typed into any TextBox control.",
    "Controls_AddButton": "Adds a button to the graphics window at the specified position, and returns it.",
    "Controls_AddButton_Caption": "The caption to display in the button.",
    "Controls_AddButton_Left": "The x co-ordinate of the button.",
    "Controls_AddButton_Top": "The y co-ordinate of the button.",
    "Controls_GetButtonCaption": "Gets the current caption of the specified button.",
    "Controls_GetButtonCaption_ButtonName": "The Button whose caption is requested.",
    "Controls_SetButtonCaption": "Sets the caption of the specified button.",
    "Controls_SetButtonCaption_ButtonName": "She Button whose caption needs to be set.",
    "Controls_SetButtonCaption_Caption": "The new caption for the button.",
    "Controls_AddTextBox": "Adds a text input box to the graphics window at the specified position, and returns it.",
    "Controls_AddTextBox_Left": "The x co-ordinate of the text box.",
    "Controls_AddTextBox_Top": "The y co-ordinate of the text box.",
    "Controls_AddMultiLineTextBox": "Adds a multi-line text input box to the graphics window at the specified position, and returns it.",
    "Controls_AddMultiLineTextBox_Left": "The x co-ordinate of the text box.",
    "Controls_AddMultiLineTextBox_Top": "The y co-ordinate of the text box.",
    "Controls_GetTextBoxText": "Gets the current text of the specified TextBox.",
    "Controls_GetTextBoxText_TextBoxName": "The TextBox whose text is requested.",
    "Controls_SetTextBoxText": "Sets the text of the specified TextBox.",
    "Controls_SetTextBoxText_TextBoxName": "The TextBox whose text needs to be set.",
    "Controls_SetTextBoxText_Text": "The new text for the TextBox.",
    "Controls_Remove": "Removes a control from the Graphics Window.",
    "Controls_Remove_ControlName": "The name of the control that needs to be removed.",
    "Controls_Move": "Moves the control with the specified name to a new position.",
    "Controls_Move_Control": "The name of the control to move.",
    "Controls_Move_X": "The x co-ordinate of the new position.",
    "Controls_Move_Y": "The y co-ordinate of the new position.",
    "Controls_SetSize": "Sets the size of the control.",
    "Controls_SetSize_Control": "The name of the control to be resized.",
    "Controls_SetSize_Width": "The width of the control.",
    "Controls_SetSize_Height": "The height of the control.",
    "Controls_HideControl": "Hides an already added control.",
    "Controls_HideControl_ControlName": "The name of the control.",
    "Controls_ShowControl": "Shows a previously hidden control.",
    "Controls_ShowControl_ControlName": "The name of the control.",
    "Math": "The Math class provides lots of useful mathematics related methods.",
    "Math_Pi": "Gets the value of Pi.",
    "Math_Abs": "Gets the absolute value of the given number. For example, -32.233 will return 32.233.",
    "Math_Abs_Number": "The number to get the absolute value for.",
    "Math_Remainder": "Divides the first number by the second and returns the remainder.",
    "Math_Remainder_Dividend": "The number to divide.",
    "Math_Remainder_Divisor": "The number that divides.",
    "Math_Cos": "Gets the cosine of the given angle in radians.",
    "Math_Cos_Angle": "The angle whose cosine is needed (in radians).",
    "Math_Sin": "Gets the sine of the given angle in radians.",
    "Math_Sin_Angle": "The angle whose sine is needed (in radians).",
    "Math_Tan": "Gets the tangent of the given angle in radians.",
    "Math_Tan_Angle": "The angle whose tangent is needed (in radians).",
    "Math_ArcCos": "Gets the angle in radians, given the cosine value.",
    "Math_ArcCos_CosValue": "The cosine value whose angle is needed.",
    "Math_ArcSin": "Gets the angle in radians, given the sine value.",
    "Math_ArcSin_SinValue": "The sine value whose angle is needed.",
    "Math_ArcTan": "Gets the angle in radians, given the tangent value.",
    "Math_ArcTan_TanValue": "The tangent value whose angle is needed.",
    "Math_Ceiling": "Returns the smallest integer that is greater than or equal to the argument. It rounds up the integer value. For example, 32.233 will return 33. Also, 44 will return 44.",
    "Math_Ceiling_Number": "The number whose ceiling is required.",
    "Math_Floor": "Returns the largest integer that is less than or equal to the argument. It rounds down the integer value. For example, 32.233 will return 32. Also, 44 will return 44.",
    "Math_Floor_Number": "The number whose floor value is required.",
    "Math_Round": "Rounds a given number to the nearest integer. For example 32.233 will be rounded to 32.0 while 32.566 will be rounded to 33.",
    "Math_Round_Number": "The number whose approximation is required.",
    "Math_GetDegrees": "Converts a given angle in radians to degrees.",
    "Math_GetDegrees_Angle": "The angle in radians.",
    "Math_GetRadians": "Converts a given angle in degrees to radians.",
    "Math_GetRadians_Angle": "The angle in degrees.",
    "Math_GetRandomNumber": "Gets a random number between 1 and the specified maxNumber (inclusive).",
    "Math_GetRandomNumber_MaxNumber": "The maximum number for the requested random value.",
    "Math_Log": "Gets the logarithm (base 10) value of the given number.",
    "Math_Log_Number": "The number whose logarithm value is required.",
    "Math_NaturalLog": "Gets the natural logarithm value of the given number.",
    "Math_NaturalLog_Number": "The number whose natural logarithm value is required.",
    "Math_Max": "Compares two numbers and returns the greater of the two.",
    "Math_Max_Number1": "The first of the two numbers to compare.",
    "Math_Max_Number2": "The second of the two numbers to compare.",
    "Math_Min": "Compares two numbers and returns the smaller of the two.",
    "Math_Min_Number1": "The first of the two numbers to compare.",
    "Math_Min_Number2": "The second of the two numbers to compare.",
    "Math_Power": "Raises the base number to the specified power.",
    "Math_Power_BaseNumber": "The number to be raised to the exponent power.",
    "Math_Power_Exponent": "The power to raise the base number.",
    "Math_SquareRoot": "Gets the square root of a given number.",
    "Math_SquareRoot_Number": "The number whose square root value is needed.",
    "Program": "The Program class provides helpers to control the program execution.",
    "Program_Pause": "Pauses the program execution for debugging.",
    "Program_End": "Ends the program.",
    "Shapes": "The Shape object allows you to add, move and rotate shapes to the Graphics window.",
    "Shapes_AddRectangle": "Adds a rectangle shape with the specified width and height, and returns it.",
    "Shapes_AddRectangle_Width": "The width of the rectangle shape.",
    "Shapes_AddRectangle_Height": "he height of the rectangle shape.",
    "Shapes_AddEllipse": "Adds an ellipse shape with the specified width and height, and returns it.",
    "Shapes_AddEllipse_Width": "The width of the ellipse shape.",
    "Shapes_AddEllipse_Height": "he height of the ellipse shape.",
    "Shapes_AddTriangle": "Adds a triangle shape represented by the specified points, and returns it.",
    "Shapes_AddTriangle_X1": "The x co-ordinate of the first point.",
    "Shapes_AddTriangle_Y1": "The y co-ordinate of the first point.",
    "Shapes_AddTriangle_X2": "The x co-ordinate of the second point.",
    "Shapes_AddTriangle_Y2": "The y co-ordinate of the second point.",
    "Shapes_AddTriangle_X3": "The x co-ordinate of the third point.",
    "Shapes_AddTriangle_Y3": "The y co-ordinate of the third point.",
    "Shapes_AddLine": "Adds a line between the specified points.",
    "Shapes_AddLine_X1": "The x co-ordinate of the first point.",
    "Shapes_AddLine_Y1": "The y co-ordinate of the first point.",
    "Shapes_AddLine_X2": "The x co-ordinate of the second point.",
    "Shapes_AddLine_Y2": "The y co-ordinate of the second point.",
    "Shapes_AddImage": "Adds an image as a shape that can be moved, animated or rotated, and returns it.",
    "Shapes_AddImage_ImageName": "The name of the image to draw.",
    "Shapes_AddText": "Adds some text as a shape that can be moved, animated or rotated, and returns it.",
    "Shapes_AddText_Text": "The text to add.",
    "Shapes_SetText": "Sets the text of a text shape.",
    "Shapes_SetText_ShapeName": "The name of the text shape.",
    "Shapes_SetText_Text": "The new text value to set.",
    "Shapes_Remove": "Removes a shape from the Graphics Window.",
    "Shapes_Remove_ShapeName": "The name of the shape that needs to be removed.",
    "Shapes_Move": "Moves the shape with the specified name to a new position.",
    "Shapes_Move_ShapeName": "The name of the shape to move.",
    "Shapes_Move_X": "The x co-ordinate of the new position.",
    "Shapes_Move_Y": "The y co-ordinate of the new position.",
    "Shapes_Rotate": "Rotates the shape with the specified name to the specified angle.",
    "Shapes_Rotate_ShapeName": "The name of the shape to rotate.",
    "Shapes_Rotate_Angle": "The angle to rotate the shape.",
    "Shapes_Zoom": "Scales the shape using the specified zoom levels.  Minimum is 0.1 and maximum is 20.",
    "Shapes_Zoom_ShapeName": "The name of the shape to zoom.",
    "Shapes_Zoom_ScaleX": "The x-axis zoom level.",
    "Shapes_Zoom_ScaleY": "The y-axis zoom level.",
    "Shapes_Animate": "Animates a shape with the specified name to a new position.",
    "Shapes_Animate_ShapeName": "The name of the shape to move.",
    "Shapes_Animate_X": "The x co-ordinate of the new position.",
    "Shapes_Animate_Y": "The y co-ordinate of the new position.",
    "Shapes_Animate_Duration": "The time for the animation, in milliseconds.",
    "Shapes_GetLeft": "Gets the left co-ordinate of the specified shape.",
    "Shapes_GetLeft_ShapeName": "The name of the shape.",
    "Shapes_GetTop": "Gets the top co-ordinate of the specified shape.",
    "Shapes_GetTop_ShapeName": "The name of the shape.",
    "Shapes_GetOpacity": "Gets the opacity of a shape.",
    "Shapes_GetOpacity_ShapeName": "The name of the shape.",
    "Shapes_SetOpacity": "Sets how opaque a shape should render.",
    "Shapes_SetOpacity_ShapeName": "The name of the shape.",
    "Shapes_SetOpacity_Level": "The opacity level ranging from 0 to 100.  0 is completely transparent and 100 is completely opaque.",
    "Shapes_HideShape": "Hides an already added shape.",
    "Shapes_HideShape_ShapeName": "The name of the shape.",
    "Shapes_ShowShape": "Shows a previously hidden shape.",
    "Shapes_ShowShape_ShapeName": "The name of the shape.",
    "Stack": "This object provides a way of storing values just like stacking up a plate. You can push a value to the top of the stack and pop it off. You can only pop the values one by one off the stack and the last pushed value will be the first one to pop out.",
    "Stack_PushValue": "Pushes a value to the specified stack.",
    "Stack_PushValue_StackName": "The name of the stack.",
    "Stack_PushValue_Value": "The value to push.",
    "Stack_GetCount": "Gets the count of items in the specified stack.",
    "Stack_GetCount_StackName": "The name of the stack.",
    "Stack_PopValue": "Pops a value from the specified stack.",
    "Stack_PopValue_StackName": "The name of the stack.",    
    "Text": "The Text object provides helpful operations for working with Text.",
    "Text_Append": "Appends two text inputs and returns the result as another text.  This operation is particularly useful when dealing with unknown text in variables which could accidentally be treated as numbers and get added, instead of getting appended.",
    "Text_Append_Text1" : "First part of the text to be appended.",
    "Text_Append_Text2" : "Second part of the text to be appended.",
    "Text_GetLength" : "Gets the length of the given text.",
    "Text_GetLength_Text" :  "The text whose length is needed.",
    "TextWindow": "The TextWindow provides text-related input and output functionalities. For example using this class, it is possible to write or read some text or number to and from the text-based text window.",
    "TextWindow_Read": "Reads a line of text from the text window. Returns the string entered by the user.",
    "TextWindow_ReadNumber": "Reads a number from the text window. Returns the number entered by the user.",
    "TextWindow_Write": "Writes a string or a number to the text window on the same line.",
    "TextWindow_Write_Data": "The string or number to be written to the text window.",
    "TextWindow_WriteLine": "Writes a string or a number to the text window on its own line.",
    "TextWindow_WriteLine_Data": "The string or number to be written to the text window.",
    "TextWindow_ForegroundColor": "Gets or sets the foreground color of the text to be output in the text window.",
    "TextWindow_BackgroundColor": "Gets or sets the background color of the text to be output in the text window.",
    "Turtle": "The Turtle provides Logo-like functionality to draw shapes by manipulating the properties of a pen and drawing primitives.",
    "Turtle_Speed": "Specifies how fast the turtle should move. Valid values are 1 to 10. If Speed is set to 10, the turtle moves and rotates instantly.",
    "Turtle_Angle": "Gets or sets the current angle of the turtle. While setting, this will turn the turtle instantly to the new angle.",
    "Turtle_X": "Gets or sets the X location of the Turtle. While setting, this will move the turtle instantly to the new location.",
    "Turtle_Y": "Gets or sets the Y location of the Turtle. While setting, this will move the turtle instantly to the new location.",
    "Turtle_Show": "Shows the turtle.",
    "Turtle_Hide": "Hides the turtle.",
    "Turtle_PenDown": "Sets the pen down to enable the turtle to draw as it moves.",
    "Turtle_PenUp": "Lifts the pen up to stop drawing as the turtle moves.",
    "Turtle_Move": "Moves the turtle to a specified distance.  If the pen is down, it will draw a line as it moves.",
    "Turtle_Move_Distance": "The distance to move the turtle.",
    "Turtle_MoveTo": "Turns and moves the turtle to the specified location.  If the pen is down, it will draw a line as it moves.",
    "Turtle_MoveTo_X": "The x co-ordinate of the destination point.",
    "Turtle_MoveTo_Y": "The y co-ordinate of the destination point.",
    "Turtle_Turn": "Turns the turtle by the specified angle. Angle is in degrees and can be either positive or negative. If the angle is positive, the turtle turns to its right. If it is negative, the turtle turns to its left.",
    "Turtle_Turn_Angle": "The angle to turn the turtle.",
    "Turtle_TurnLeft": "Turns the turtle 90 degrees to the left.",
    "Turtle_TurnRight": "Turns the turtle 90 degrees to the right."
}