<root kind="CommandSyntax">
    <IfCommandSyntax>
        <ifToken type="Token" />
        <expression type="BaseExpressionSyntax" />
        <thenToken type="Token" />
    </IfCommandSyntax>

    <ElseCommandSyntax>
        <elseToken type="Token" />
    </ElseCommandSyntax>

    <ElseIfCommandSyntax>
        <elseIfToken type="Token" />
        <expression type="BaseExpressionSyntax" />
        <thenToken type="Token" />
    </ElseIfCommandSyntax>

    <EndIfCommandSyntax>
        <endIfToken type="Token" />
    </EndIfCommandSyntax>
    
    <ForCommandSyntax>
        <forToken type="Token" />
        <identifierToken type="Token" />
        <equalToken type="Token" />
        <fromExpression type="BaseExpressionSyntax" />
        <toToken type="Token" />
        <toExpression type="BaseExpressionSyntax" />
        <stepClause type="ForStepClauseCommandSyntax" optional="true" />
    </ForCommandSyntax>
    
    <ForStepClauseCommandSyntax>
        <stepToken type="Token" />
        <expression type="BaseExpressionSyntax" />
    </ForStepClauseCommandSyntax>
    
    <EndForCommandSyntax>
        <endForToken type="Token" />
    </EndForCommandSyntax>
    
    <WhileCommandSyntax>
        <whileToken type="Token" />
        <expression type="BaseExpressionSyntax" />
    </WhileCommandSyntax>
    
    <EndWhileCommandSyntax>
        <endWhileToken type="Token" />
    </EndWhileCommandSyntax>
    
    <LabelCommandSyntax>
        <labelToken type="Token" />
        <colonToken type="Token" />
    </LabelCommandSyntax>
    
    <GoToCommandSyntax>
        <goToToken type="Token" />
        <labelToken type="Token" />
    </GoToCommandSyntax>
    
    <SubCommandSyntax>
        <subToken type="Token" />
        <nameToken type="Token" />
    </SubCommandSyntax>
    
    <EndSubCommandSyntax>
        <endSubToken type="Token" />
    </EndSubCommandSyntax>
    
    <ExpressionCommandSyntax>
        <expression type="BaseExpressionSyntax" />
    </ExpressionCommandSyntax>
    
    <MissingCommandSyntax>
        <range type="TextRange" />
        <expectedKind type="CommandSyntaxKind" />
    </MissingCommandSyntax>
</root>